name: make all

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build-linux:

    runs-on: ubuntu-latest
    outputs:
      commit_tag: ${{ steps.build-linux.outputs.commit_tag }}
      commit_hash: ${{ steps.build-linux.outputs.commit_hash }}
      author_name: ${{ steps.build-linux.outputs.author_name }}
      committer_name: ${{ steps.build-linux.outputs.committer_name }}
      commit_subject: ${{ steps.build-linux.outputs.commit_subject }}
      commit_message: ${{ steps.build-linux.outputs.commit_message }}
    steps:
    - uses: actions/checkout@v2
    - name: Get Dependencies
      run: |
        sudo apt update && \
        sudo apt install -y libncurses-dev
    - name: Build For Linux
      id: build-linux
      run: |
        make linux

        echo ::set-output name=commit_tag::$(git describe --abbrev=0 --tags)
        echo ::set-output name=commit_hash::$(git log --format=%h -1)
        echo "::set-output name=author_name::$(git log -1 $GITHUB_SHA --pretty=%aN)"
        echo "::set-output name=committer_name::$(git log -1 $GITHUB_SHA --pretty=%cN)"
        echo "::set-output name=commit_subject::$(git log -1 $GITHUB_SHA --pretty=%s)"
        echo "::set-output name=commit_message::$(git log -1 $GITHUB_SHA --pretty=%b)"
    - name: Pack Build Files and Generate Checksums
      run: |
        mkdir ~/theVaultC-linux
        mv bin/* ~/theVaultC-linux
        tar -cvf ~/theVaultC-linux.tar ~/theVaultC-linux
        mkdir ~/theVaultC-linux-Checksums
        shasum -a 256 ~/theVaultC-linux.tar | sed 's/ .*//g' > ~/theVaultC-linux-Checksums/theVaultC-linux.tar.sha256
        openssl md5 ~/theVaultC-linux.tar | sed 's/.* //' > ~/theVaultC-linux-Checksums/theVaultC-linux.tar.md5
    - name: Publish Build Files
      uses: actions/upload-artifact@v2
      with:
        path: ~/theVaultC-linux.tar
        name: theVaultC-linux
    - name: Publish Checksums
      uses: actions/upload-artifact@v2
      with:
        path: ~/theVaultC-linux-Checksums/*
        name: theVaultC-linux-Checksums
  build-macos:

    runs-on: macos-11

    steps:
    - uses: actions/checkout@v2
    - name: Get Dependencies
      run: |
        brew install ncurses
    - name: Build For macOS
      run: make mac
    - name: Pack Build Files and Generate Checksums
      run: |
        mkdir ~/theVaultC-macOS
        mv bin/* ~/theVaultC-macOS
        tar -cvf ~/theVaultC-macOS.tar ~/theVaultC-macOS
        mkdir ~/theVaultC-macOS-Checksums
        shasum -a 256 ~/theVaultC-macOS.tar | sed 's/ .*//g' > ~/theVaultC-macOS-Checksums/theVaultC-macOS.tar.sha256
        openssl md5 ~/theVaultC-macOS.tar | sed 's/.* //' > ~/theVaultC-macOS-Checksums/theVaultC-macOS.tar.md5
    - name: Publish Build Files
      uses: actions/upload-artifact@v2
      with:
        path: ~/theVaultC-macOS.tar
        name: theVaultC-macOS
    - name: Publish Checksums
      uses: actions/upload-artifact@v2
      with:
        path: ~/theVaultC-macOS-Checksums/*
        name: theVaultC-macOS-Checksums

  send_webhook:
      runs-on: ubuntu-latest
      needs: [build-linux, build-macos]
      name: Send Discord webhook
      if: ${{ !startsWith(github.ref, 'refs/pull') }}
      env:
        AUTHOR_NAME: ${{ needs.build-linux.outputs.author_name }}
        COMMITTER_NAME: ${{ needs.build-linux.outputs.committer_name }}
        COMMIT_SUBJECT: ${{ needs.build-linux.outputs.commit_subject }}
        COMMIT_MESSAGE: ${{ needs.build-linux.outputs.commit_message }}
      steps:
        - name: Send success webhook
          if: ${{ success() }}
          run: |
            curl -o send.sh https://raw.githubusercontent.com/NCX-Programming/discord-webhooks/master/send-ghactions.sh
            chmod +x send.sh
            ./send.sh success ${{ secrets.IAN_WEBHOOK_URL }}
            ./send.sh success ${{ secrets.NCX_WEBHOOK_URL }}
        - name: Send failure webhook
          if: ${{ failure() }}
          run: |
            curl -o send.sh https://raw.githubusercontent.com/NCX-Programming/discord-webhooks/master/send-ghactions.sh
            chmod +x send.sh
            ./send.sh failure ${{ secrets.IAN_WEBHOOK_URL }}
            ./send.sh failure ${{ secrets.NCX_WEBHOOK_URL }}
